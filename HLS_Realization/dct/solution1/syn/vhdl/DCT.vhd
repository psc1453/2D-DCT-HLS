-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity DCT is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_0_ce0 : OUT STD_LOGIC;
    input_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_0_ce1 : OUT STD_LOGIC;
    input_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_1_ce0 : OUT STD_LOGIC;
    input_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_1_ce1 : OUT STD_LOGIC;
    input_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_2_ce0 : OUT STD_LOGIC;
    input_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_2_ce1 : OUT STD_LOGIC;
    input_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_3_ce0 : OUT STD_LOGIC;
    input_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_3_ce1 : OUT STD_LOGIC;
    input_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_4_ce0 : OUT STD_LOGIC;
    input_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_4_ce1 : OUT STD_LOGIC;
    input_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_5_ce0 : OUT STD_LOGIC;
    input_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_5_ce1 : OUT STD_LOGIC;
    input_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_6_ce0 : OUT STD_LOGIC;
    input_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_6_ce1 : OUT STD_LOGIC;
    input_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_7_ce0 : OUT STD_LOGIC;
    input_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_7_ce1 : OUT STD_LOGIC;
    input_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_0_ce0 : OUT STD_LOGIC;
    output_0_we0 : OUT STD_LOGIC;
    output_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_0_ce1 : OUT STD_LOGIC;
    output_0_we1 : OUT STD_LOGIC;
    output_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_1_ce0 : OUT STD_LOGIC;
    output_1_we0 : OUT STD_LOGIC;
    output_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_1_ce1 : OUT STD_LOGIC;
    output_1_we1 : OUT STD_LOGIC;
    output_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_2_ce0 : OUT STD_LOGIC;
    output_2_we0 : OUT STD_LOGIC;
    output_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_2_ce1 : OUT STD_LOGIC;
    output_2_we1 : OUT STD_LOGIC;
    output_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_3_ce0 : OUT STD_LOGIC;
    output_3_we0 : OUT STD_LOGIC;
    output_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_3_ce1 : OUT STD_LOGIC;
    output_3_we1 : OUT STD_LOGIC;
    output_3_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_4_ce0 : OUT STD_LOGIC;
    output_4_we0 : OUT STD_LOGIC;
    output_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_4_ce1 : OUT STD_LOGIC;
    output_4_we1 : OUT STD_LOGIC;
    output_4_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_5_ce0 : OUT STD_LOGIC;
    output_5_we0 : OUT STD_LOGIC;
    output_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_5_ce1 : OUT STD_LOGIC;
    output_5_we1 : OUT STD_LOGIC;
    output_5_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_6_ce0 : OUT STD_LOGIC;
    output_6_we0 : OUT STD_LOGIC;
    output_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_6_ce1 : OUT STD_LOGIC;
    output_6_we1 : OUT STD_LOGIC;
    output_6_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_7_ce0 : OUT STD_LOGIC;
    output_7_we0 : OUT STD_LOGIC;
    output_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_7_ce1 : OUT STD_LOGIC;
    output_7_we1 : OUT STD_LOGIC;
    output_7_d1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of DCT is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "DCT,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu47p-fsvh2892-3-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.834313,HLS_SYN_LAT=224,HLS_SYN_TPT=none,HLS_SYN_MEM=32,HLS_SYN_DSP=114,HLS_SYN_FF=1376,HLS_SYN_LUT=10576,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (84 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (84 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (84 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (84 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (84 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (84 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (84 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (84 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (84 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (84 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln110_fu_518_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln110_reg_590 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal input_buf_2d_0_addr_reg_595 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_1_addr_reg_600 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_2_addr_reg_605 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_3_addr_reg_610 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_4_addr_reg_615 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_5_addr_reg_620 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_6_addr_reg_625 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_7_addr_reg_630 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln110_1_fu_536_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln111_fu_554_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln111_reg_646 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal output_buf_2d_0_add_reg_651 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_1_add_reg_656 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_2_add_reg_661 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_3_add_reg_666 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_4_add_reg_671 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_5_add_reg_676 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_6_add_reg_681 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_7_add_reg_686 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln111_1_fu_572_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal input_buf_2d_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_0_ce0 : STD_LOGIC;
    signal input_buf_2d_0_we0 : STD_LOGIC;
    signal input_buf_2d_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_0_ce1 : STD_LOGIC;
    signal input_buf_2d_0_we1 : STD_LOGIC;
    signal input_buf_2d_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_1_ce0 : STD_LOGIC;
    signal input_buf_2d_1_we0 : STD_LOGIC;
    signal input_buf_2d_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_1_ce1 : STD_LOGIC;
    signal input_buf_2d_1_we1 : STD_LOGIC;
    signal input_buf_2d_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_2_ce0 : STD_LOGIC;
    signal input_buf_2d_2_we0 : STD_LOGIC;
    signal input_buf_2d_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_2_ce1 : STD_LOGIC;
    signal input_buf_2d_2_we1 : STD_LOGIC;
    signal input_buf_2d_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_3_ce0 : STD_LOGIC;
    signal input_buf_2d_3_we0 : STD_LOGIC;
    signal input_buf_2d_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_3_ce1 : STD_LOGIC;
    signal input_buf_2d_3_we1 : STD_LOGIC;
    signal input_buf_2d_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_4_ce0 : STD_LOGIC;
    signal input_buf_2d_4_we0 : STD_LOGIC;
    signal input_buf_2d_4_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_4_ce1 : STD_LOGIC;
    signal input_buf_2d_4_we1 : STD_LOGIC;
    signal input_buf_2d_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_5_ce0 : STD_LOGIC;
    signal input_buf_2d_5_we0 : STD_LOGIC;
    signal input_buf_2d_5_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_5_ce1 : STD_LOGIC;
    signal input_buf_2d_5_we1 : STD_LOGIC;
    signal input_buf_2d_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_6_ce0 : STD_LOGIC;
    signal input_buf_2d_6_we0 : STD_LOGIC;
    signal input_buf_2d_6_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_6_ce1 : STD_LOGIC;
    signal input_buf_2d_6_we1 : STD_LOGIC;
    signal input_buf_2d_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_buf_2d_7_ce0 : STD_LOGIC;
    signal input_buf_2d_7_we0 : STD_LOGIC;
    signal input_buf_2d_7_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2d_7_ce1 : STD_LOGIC;
    signal input_buf_2d_7_we1 : STD_LOGIC;
    signal output_buf_2d_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_0_ce0 : STD_LOGIC;
    signal output_buf_2d_0_we0 : STD_LOGIC;
    signal output_buf_2d_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_0_ce1 : STD_LOGIC;
    signal output_buf_2d_0_we1 : STD_LOGIC;
    signal output_buf_2d_0_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_1_ce0 : STD_LOGIC;
    signal output_buf_2d_1_we0 : STD_LOGIC;
    signal output_buf_2d_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_1_ce1 : STD_LOGIC;
    signal output_buf_2d_1_we1 : STD_LOGIC;
    signal output_buf_2d_1_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_2_ce0 : STD_LOGIC;
    signal output_buf_2d_2_we0 : STD_LOGIC;
    signal output_buf_2d_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_2_ce1 : STD_LOGIC;
    signal output_buf_2d_2_we1 : STD_LOGIC;
    signal output_buf_2d_2_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_3_ce0 : STD_LOGIC;
    signal output_buf_2d_3_we0 : STD_LOGIC;
    signal output_buf_2d_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_3_ce1 : STD_LOGIC;
    signal output_buf_2d_3_we1 : STD_LOGIC;
    signal output_buf_2d_3_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_4_ce0 : STD_LOGIC;
    signal output_buf_2d_4_we0 : STD_LOGIC;
    signal output_buf_2d_4_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_4_ce1 : STD_LOGIC;
    signal output_buf_2d_4_we1 : STD_LOGIC;
    signal output_buf_2d_4_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_5_ce0 : STD_LOGIC;
    signal output_buf_2d_5_we0 : STD_LOGIC;
    signal output_buf_2d_5_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_5_ce1 : STD_LOGIC;
    signal output_buf_2d_5_we1 : STD_LOGIC;
    signal output_buf_2d_5_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_6_ce0 : STD_LOGIC;
    signal output_buf_2d_6_we0 : STD_LOGIC;
    signal output_buf_2d_6_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_6_ce1 : STD_LOGIC;
    signal output_buf_2d_6_we1 : STD_LOGIC;
    signal output_buf_2d_6_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_7_ce0 : STD_LOGIC;
    signal output_buf_2d_7_we0 : STD_LOGIC;
    signal output_buf_2d_7_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_2d_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal output_buf_2d_7_ce1 : STD_LOGIC;
    signal output_buf_2d_7_we1 : STD_LOGIC;
    signal output_buf_2d_7_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_ap_start : STD_LOGIC;
    signal grp_DCT_2D_fu_410_ap_done : STD_LOGIC;
    signal grp_DCT_2D_fu_410_ap_idle : STD_LOGIC;
    signal grp_DCT_2D_fu_410_ap_ready : STD_LOGIC;
    signal grp_DCT_2D_fu_410_input_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_input_0_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_input_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_input_1_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_input_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_input_2_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_input_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_input_3_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_input_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_input_4_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_input_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_input_5_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_input_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_input_6_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_input_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_input_7_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_0_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_0_we0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_0_ce1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_0_we1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_0_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_1_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_1_we0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_1_ce1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_1_we1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_1_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_2_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_2_we0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_2_ce1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_2_we1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_2_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_3_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_3_we0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_3_ce1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_3_we1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_3_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_4_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_4_we0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_4_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_4_ce1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_4_we1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_4_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_5_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_5_we0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_5_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_5_ce1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_5_we1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_5_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_6_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_6_we0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_6_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_6_ce1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_6_we1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_6_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_7_ce0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_7_we0 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_7_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_DCT_2D_fu_410_output_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_output_7_ce1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_7_we1 : STD_LOGIC;
    signal grp_DCT_2D_fu_410_output_7_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_ap_start : STD_LOGIC;
    signal grp_read_matrix_fu_462_ap_done : STD_LOGIC;
    signal grp_read_matrix_fu_462_ap_idle : STD_LOGIC;
    signal grp_read_matrix_fu_462_ap_ready : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_0_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_0_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_1_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_1_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_2_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_2_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_3_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_3_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_4_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_4_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_5_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_5_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_6_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_6_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_7_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_input_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_input_7_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_0_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_0_we0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_0_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_0_we1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_0_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_1_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_1_we0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_1_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_1_we1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_1_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_2_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_2_we0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_2_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_2_we1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_2_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_3_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_3_we0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_3_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_3_we1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_3_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_4_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_4_we0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_4_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_4_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_4_we1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_4_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_5_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_5_we0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_5_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_5_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_5_we1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_5_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_6_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_6_we0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_6_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_6_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_6_we1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_6_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_7_ce0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_7_we0 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_7_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_matrix_fu_462_output_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_matrix_fu_462_output_7_ce1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_7_we1 : STD_LOGIC;
    signal grp_read_matrix_fu_462_output_7_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_ap_start : STD_LOGIC;
    signal grp_write_matrix_fu_490_ap_done : STD_LOGIC;
    signal grp_write_matrix_fu_490_ap_idle : STD_LOGIC;
    signal grp_write_matrix_fu_490_ap_ready : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_0_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_0_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_1_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_1_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_2_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_2_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_3_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_3_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_4_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_4_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_5_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_5_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_6_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_6_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_7_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_input_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_input_7_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_0_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_0_we0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_0_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_0_we1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_0_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_1_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_1_we0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_1_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_1_we1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_1_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_2_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_2_we0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_2_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_2_we1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_2_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_3_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_3_we0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_3_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_3_we1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_3_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_4_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_4_we0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_4_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_4_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_4_we1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_4_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_5_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_5_we0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_5_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_5_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_5_we1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_5_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_6_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_6_we0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_6_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_6_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_6_we1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_6_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_7_ce0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_7_we0 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_7_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_matrix_fu_490_output_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_matrix_fu_490_output_7_ce1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_7_we1 : STD_LOGIC;
    signal grp_write_matrix_fu_490_output_7_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln110_reg_364 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln110_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_1_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_phi_ln110_1_phi_fu_380_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln110_1_reg_376 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln111_reg_387 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln111_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_1_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_phi_ln111_1_phi_fu_403_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln111_1_reg_399 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_2D_fu_410_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (84 downto 0);
    signal ap_NS_fsm_state29 : STD_LOGIC;
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal grp_read_matrix_fu_462_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_NS_fsm_state24 : STD_LOGIC;
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_write_matrix_fu_490_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm_state81 : STD_LOGIC;
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal zext_ln110_fu_524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_fu_560_p1 : STD_LOGIC_VECTOR (63 downto 0);

    component DCT_2D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_1_ce0 : OUT STD_LOGIC;
        input_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_2_ce0 : OUT STD_LOGIC;
        input_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_3_ce0 : OUT STD_LOGIC;
        input_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_4_ce0 : OUT STD_LOGIC;
        input_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_5_ce0 : OUT STD_LOGIC;
        input_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_6_ce0 : OUT STD_LOGIC;
        input_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_7_ce0 : OUT STD_LOGIC;
        input_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_0_ce1 : OUT STD_LOGIC;
        output_0_we1 : OUT STD_LOGIC;
        output_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_we0 : OUT STD_LOGIC;
        output_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_1_ce1 : OUT STD_LOGIC;
        output_1_we1 : OUT STD_LOGIC;
        output_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_2_ce0 : OUT STD_LOGIC;
        output_2_we0 : OUT STD_LOGIC;
        output_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_2_ce1 : OUT STD_LOGIC;
        output_2_we1 : OUT STD_LOGIC;
        output_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_3_ce0 : OUT STD_LOGIC;
        output_3_we0 : OUT STD_LOGIC;
        output_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_3_ce1 : OUT STD_LOGIC;
        output_3_we1 : OUT STD_LOGIC;
        output_3_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_4_ce0 : OUT STD_LOGIC;
        output_4_we0 : OUT STD_LOGIC;
        output_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_4_ce1 : OUT STD_LOGIC;
        output_4_we1 : OUT STD_LOGIC;
        output_4_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_5_ce0 : OUT STD_LOGIC;
        output_5_we0 : OUT STD_LOGIC;
        output_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_5_ce1 : OUT STD_LOGIC;
        output_5_we1 : OUT STD_LOGIC;
        output_5_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_6_ce0 : OUT STD_LOGIC;
        output_6_we0 : OUT STD_LOGIC;
        output_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_6_ce1 : OUT STD_LOGIC;
        output_6_we1 : OUT STD_LOGIC;
        output_6_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_7_ce0 : OUT STD_LOGIC;
        output_7_we0 : OUT STD_LOGIC;
        output_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_7_ce1 : OUT STD_LOGIC;
        output_7_we1 : OUT STD_LOGIC;
        output_7_d1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component read_matrix IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_0_ce1 : OUT STD_LOGIC;
        input_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_1_ce0 : OUT STD_LOGIC;
        input_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_1_ce1 : OUT STD_LOGIC;
        input_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_2_ce0 : OUT STD_LOGIC;
        input_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_2_ce1 : OUT STD_LOGIC;
        input_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_3_ce0 : OUT STD_LOGIC;
        input_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_3_ce1 : OUT STD_LOGIC;
        input_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_4_ce0 : OUT STD_LOGIC;
        input_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_4_ce1 : OUT STD_LOGIC;
        input_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_5_ce0 : OUT STD_LOGIC;
        input_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_5_ce1 : OUT STD_LOGIC;
        input_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_6_ce0 : OUT STD_LOGIC;
        input_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_6_ce1 : OUT STD_LOGIC;
        input_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_7_ce0 : OUT STD_LOGIC;
        input_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_7_ce1 : OUT STD_LOGIC;
        input_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_0_ce1 : OUT STD_LOGIC;
        output_0_we1 : OUT STD_LOGIC;
        output_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_we0 : OUT STD_LOGIC;
        output_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_1_ce1 : OUT STD_LOGIC;
        output_1_we1 : OUT STD_LOGIC;
        output_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_2_ce0 : OUT STD_LOGIC;
        output_2_we0 : OUT STD_LOGIC;
        output_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_2_ce1 : OUT STD_LOGIC;
        output_2_we1 : OUT STD_LOGIC;
        output_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_3_ce0 : OUT STD_LOGIC;
        output_3_we0 : OUT STD_LOGIC;
        output_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_3_ce1 : OUT STD_LOGIC;
        output_3_we1 : OUT STD_LOGIC;
        output_3_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_4_ce0 : OUT STD_LOGIC;
        output_4_we0 : OUT STD_LOGIC;
        output_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_4_ce1 : OUT STD_LOGIC;
        output_4_we1 : OUT STD_LOGIC;
        output_4_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_5_ce0 : OUT STD_LOGIC;
        output_5_we0 : OUT STD_LOGIC;
        output_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_5_ce1 : OUT STD_LOGIC;
        output_5_we1 : OUT STD_LOGIC;
        output_5_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_6_ce0 : OUT STD_LOGIC;
        output_6_we0 : OUT STD_LOGIC;
        output_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_6_ce1 : OUT STD_LOGIC;
        output_6_we1 : OUT STD_LOGIC;
        output_6_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_7_ce0 : OUT STD_LOGIC;
        output_7_we0 : OUT STD_LOGIC;
        output_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_7_ce1 : OUT STD_LOGIC;
        output_7_we1 : OUT STD_LOGIC;
        output_7_d1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component write_matrix IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_0_ce1 : OUT STD_LOGIC;
        input_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_1_ce0 : OUT STD_LOGIC;
        input_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_1_ce1 : OUT STD_LOGIC;
        input_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_2_ce0 : OUT STD_LOGIC;
        input_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_2_ce1 : OUT STD_LOGIC;
        input_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_3_ce0 : OUT STD_LOGIC;
        input_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_3_ce1 : OUT STD_LOGIC;
        input_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_4_ce0 : OUT STD_LOGIC;
        input_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_4_ce1 : OUT STD_LOGIC;
        input_4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_5_ce0 : OUT STD_LOGIC;
        input_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_5_ce1 : OUT STD_LOGIC;
        input_5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_6_ce0 : OUT STD_LOGIC;
        input_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_6_ce1 : OUT STD_LOGIC;
        input_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_7_ce0 : OUT STD_LOGIC;
        input_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_7_ce1 : OUT STD_LOGIC;
        input_7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_0_ce1 : OUT STD_LOGIC;
        output_0_we1 : OUT STD_LOGIC;
        output_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_we0 : OUT STD_LOGIC;
        output_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_1_ce1 : OUT STD_LOGIC;
        output_1_we1 : OUT STD_LOGIC;
        output_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_2_ce0 : OUT STD_LOGIC;
        output_2_we0 : OUT STD_LOGIC;
        output_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_2_ce1 : OUT STD_LOGIC;
        output_2_we1 : OUT STD_LOGIC;
        output_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_3_ce0 : OUT STD_LOGIC;
        output_3_we0 : OUT STD_LOGIC;
        output_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_3_ce1 : OUT STD_LOGIC;
        output_3_we1 : OUT STD_LOGIC;
        output_3_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_4_ce0 : OUT STD_LOGIC;
        output_4_we0 : OUT STD_LOGIC;
        output_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_4_ce1 : OUT STD_LOGIC;
        output_4_we1 : OUT STD_LOGIC;
        output_4_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_5_ce0 : OUT STD_LOGIC;
        output_5_we0 : OUT STD_LOGIC;
        output_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_5_ce1 : OUT STD_LOGIC;
        output_5_we1 : OUT STD_LOGIC;
        output_5_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_6_ce0 : OUT STD_LOGIC;
        output_6_we0 : OUT STD_LOGIC;
        output_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_6_ce1 : OUT STD_LOGIC;
        output_6_we1 : OUT STD_LOGIC;
        output_6_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_7_ce0 : OUT STD_LOGIC;
        output_7_we0 : OUT STD_LOGIC;
        output_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        output_7_ce1 : OUT STD_LOGIC;
        output_7_we1 : OUT STD_LOGIC;
        output_7_d1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component DCT_input_buf_2d_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component DCT_2D_DCT_1D_outOgC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    input_buf_2d_0_U : component DCT_input_buf_2d_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_2d_0_address0,
        ce0 => input_buf_2d_0_ce0,
        we0 => input_buf_2d_0_we0,
        d0 => input_buf_2d_0_d0,
        q0 => input_buf_2d_0_q0,
        address1 => grp_read_matrix_fu_462_output_0_address1,
        ce1 => input_buf_2d_0_ce1,
        we1 => input_buf_2d_0_we1,
        d1 => grp_read_matrix_fu_462_output_0_d1);

    input_buf_2d_1_U : component DCT_input_buf_2d_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_2d_1_address0,
        ce0 => input_buf_2d_1_ce0,
        we0 => input_buf_2d_1_we0,
        d0 => input_buf_2d_1_d0,
        q0 => input_buf_2d_1_q0,
        address1 => grp_read_matrix_fu_462_output_1_address1,
        ce1 => input_buf_2d_1_ce1,
        we1 => input_buf_2d_1_we1,
        d1 => grp_read_matrix_fu_462_output_1_d1);

    input_buf_2d_2_U : component DCT_input_buf_2d_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_2d_2_address0,
        ce0 => input_buf_2d_2_ce0,
        we0 => input_buf_2d_2_we0,
        d0 => input_buf_2d_2_d0,
        q0 => input_buf_2d_2_q0,
        address1 => grp_read_matrix_fu_462_output_2_address1,
        ce1 => input_buf_2d_2_ce1,
        we1 => input_buf_2d_2_we1,
        d1 => grp_read_matrix_fu_462_output_2_d1);

    input_buf_2d_3_U : component DCT_input_buf_2d_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_2d_3_address0,
        ce0 => input_buf_2d_3_ce0,
        we0 => input_buf_2d_3_we0,
        d0 => input_buf_2d_3_d0,
        q0 => input_buf_2d_3_q0,
        address1 => grp_read_matrix_fu_462_output_3_address1,
        ce1 => input_buf_2d_3_ce1,
        we1 => input_buf_2d_3_we1,
        d1 => grp_read_matrix_fu_462_output_3_d1);

    input_buf_2d_4_U : component DCT_input_buf_2d_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_2d_4_address0,
        ce0 => input_buf_2d_4_ce0,
        we0 => input_buf_2d_4_we0,
        d0 => input_buf_2d_4_d0,
        q0 => input_buf_2d_4_q0,
        address1 => grp_read_matrix_fu_462_output_4_address1,
        ce1 => input_buf_2d_4_ce1,
        we1 => input_buf_2d_4_we1,
        d1 => grp_read_matrix_fu_462_output_4_d1);

    input_buf_2d_5_U : component DCT_input_buf_2d_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_2d_5_address0,
        ce0 => input_buf_2d_5_ce0,
        we0 => input_buf_2d_5_we0,
        d0 => input_buf_2d_5_d0,
        q0 => input_buf_2d_5_q0,
        address1 => grp_read_matrix_fu_462_output_5_address1,
        ce1 => input_buf_2d_5_ce1,
        we1 => input_buf_2d_5_we1,
        d1 => grp_read_matrix_fu_462_output_5_d1);

    input_buf_2d_6_U : component DCT_input_buf_2d_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_2d_6_address0,
        ce0 => input_buf_2d_6_ce0,
        we0 => input_buf_2d_6_we0,
        d0 => input_buf_2d_6_d0,
        q0 => input_buf_2d_6_q0,
        address1 => grp_read_matrix_fu_462_output_6_address1,
        ce1 => input_buf_2d_6_ce1,
        we1 => input_buf_2d_6_we1,
        d1 => grp_read_matrix_fu_462_output_6_d1);

    input_buf_2d_7_U : component DCT_input_buf_2d_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_2d_7_address0,
        ce0 => input_buf_2d_7_ce0,
        we0 => input_buf_2d_7_we0,
        d0 => input_buf_2d_7_d0,
        q0 => input_buf_2d_7_q0,
        address1 => grp_read_matrix_fu_462_output_7_address1,
        ce1 => input_buf_2d_7_ce1,
        we1 => input_buf_2d_7_we1,
        d1 => grp_read_matrix_fu_462_output_7_d1);

    output_buf_2d_0_U : component DCT_2D_DCT_1D_outOgC
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buf_2d_0_address0,
        ce0 => output_buf_2d_0_ce0,
        we0 => output_buf_2d_0_we0,
        d0 => output_buf_2d_0_d0,
        q0 => output_buf_2d_0_q0,
        address1 => output_buf_2d_0_address1,
        ce1 => output_buf_2d_0_ce1,
        we1 => output_buf_2d_0_we1,
        d1 => grp_DCT_2D_fu_410_output_0_d1,
        q1 => output_buf_2d_0_q1);

    output_buf_2d_1_U : component DCT_2D_DCT_1D_outOgC
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buf_2d_1_address0,
        ce0 => output_buf_2d_1_ce0,
        we0 => output_buf_2d_1_we0,
        d0 => output_buf_2d_1_d0,
        q0 => output_buf_2d_1_q0,
        address1 => output_buf_2d_1_address1,
        ce1 => output_buf_2d_1_ce1,
        we1 => output_buf_2d_1_we1,
        d1 => grp_DCT_2D_fu_410_output_1_d1,
        q1 => output_buf_2d_1_q1);

    output_buf_2d_2_U : component DCT_2D_DCT_1D_outOgC
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buf_2d_2_address0,
        ce0 => output_buf_2d_2_ce0,
        we0 => output_buf_2d_2_we0,
        d0 => output_buf_2d_2_d0,
        q0 => output_buf_2d_2_q0,
        address1 => output_buf_2d_2_address1,
        ce1 => output_buf_2d_2_ce1,
        we1 => output_buf_2d_2_we1,
        d1 => grp_DCT_2D_fu_410_output_2_d1,
        q1 => output_buf_2d_2_q1);

    output_buf_2d_3_U : component DCT_2D_DCT_1D_outOgC
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buf_2d_3_address0,
        ce0 => output_buf_2d_3_ce0,
        we0 => output_buf_2d_3_we0,
        d0 => output_buf_2d_3_d0,
        q0 => output_buf_2d_3_q0,
        address1 => output_buf_2d_3_address1,
        ce1 => output_buf_2d_3_ce1,
        we1 => output_buf_2d_3_we1,
        d1 => grp_DCT_2D_fu_410_output_3_d1,
        q1 => output_buf_2d_3_q1);

    output_buf_2d_4_U : component DCT_2D_DCT_1D_outOgC
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buf_2d_4_address0,
        ce0 => output_buf_2d_4_ce0,
        we0 => output_buf_2d_4_we0,
        d0 => output_buf_2d_4_d0,
        q0 => output_buf_2d_4_q0,
        address1 => output_buf_2d_4_address1,
        ce1 => output_buf_2d_4_ce1,
        we1 => output_buf_2d_4_we1,
        d1 => grp_DCT_2D_fu_410_output_4_d1,
        q1 => output_buf_2d_4_q1);

    output_buf_2d_5_U : component DCT_2D_DCT_1D_outOgC
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buf_2d_5_address0,
        ce0 => output_buf_2d_5_ce0,
        we0 => output_buf_2d_5_we0,
        d0 => output_buf_2d_5_d0,
        q0 => output_buf_2d_5_q0,
        address1 => output_buf_2d_5_address1,
        ce1 => output_buf_2d_5_ce1,
        we1 => output_buf_2d_5_we1,
        d1 => grp_DCT_2D_fu_410_output_5_d1,
        q1 => output_buf_2d_5_q1);

    output_buf_2d_6_U : component DCT_2D_DCT_1D_outOgC
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buf_2d_6_address0,
        ce0 => output_buf_2d_6_ce0,
        we0 => output_buf_2d_6_we0,
        d0 => output_buf_2d_6_d0,
        q0 => output_buf_2d_6_q0,
        address1 => output_buf_2d_6_address1,
        ce1 => output_buf_2d_6_ce1,
        we1 => output_buf_2d_6_we1,
        d1 => grp_DCT_2D_fu_410_output_6_d1,
        q1 => output_buf_2d_6_q1);

    output_buf_2d_7_U : component DCT_2D_DCT_1D_outOgC
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buf_2d_7_address0,
        ce0 => output_buf_2d_7_ce0,
        we0 => output_buf_2d_7_we0,
        d0 => output_buf_2d_7_d0,
        q0 => output_buf_2d_7_q0,
        address1 => output_buf_2d_7_address1,
        ce1 => output_buf_2d_7_ce1,
        we1 => output_buf_2d_7_we1,
        d1 => grp_DCT_2D_fu_410_output_7_d1,
        q1 => output_buf_2d_7_q1);

    grp_DCT_2D_fu_410 : component DCT_2D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_DCT_2D_fu_410_ap_start,
        ap_done => grp_DCT_2D_fu_410_ap_done,
        ap_idle => grp_DCT_2D_fu_410_ap_idle,
        ap_ready => grp_DCT_2D_fu_410_ap_ready,
        input_0_address0 => grp_DCT_2D_fu_410_input_0_address0,
        input_0_ce0 => grp_DCT_2D_fu_410_input_0_ce0,
        input_0_q0 => input_buf_2d_0_q0,
        input_1_address0 => grp_DCT_2D_fu_410_input_1_address0,
        input_1_ce0 => grp_DCT_2D_fu_410_input_1_ce0,
        input_1_q0 => input_buf_2d_1_q0,
        input_2_address0 => grp_DCT_2D_fu_410_input_2_address0,
        input_2_ce0 => grp_DCT_2D_fu_410_input_2_ce0,
        input_2_q0 => input_buf_2d_2_q0,
        input_3_address0 => grp_DCT_2D_fu_410_input_3_address0,
        input_3_ce0 => grp_DCT_2D_fu_410_input_3_ce0,
        input_3_q0 => input_buf_2d_3_q0,
        input_4_address0 => grp_DCT_2D_fu_410_input_4_address0,
        input_4_ce0 => grp_DCT_2D_fu_410_input_4_ce0,
        input_4_q0 => input_buf_2d_4_q0,
        input_5_address0 => grp_DCT_2D_fu_410_input_5_address0,
        input_5_ce0 => grp_DCT_2D_fu_410_input_5_ce0,
        input_5_q0 => input_buf_2d_5_q0,
        input_6_address0 => grp_DCT_2D_fu_410_input_6_address0,
        input_6_ce0 => grp_DCT_2D_fu_410_input_6_ce0,
        input_6_q0 => input_buf_2d_6_q0,
        input_7_address0 => grp_DCT_2D_fu_410_input_7_address0,
        input_7_ce0 => grp_DCT_2D_fu_410_input_7_ce0,
        input_7_q0 => input_buf_2d_7_q0,
        output_0_address0 => grp_DCT_2D_fu_410_output_0_address0,
        output_0_ce0 => grp_DCT_2D_fu_410_output_0_ce0,
        output_0_we0 => grp_DCT_2D_fu_410_output_0_we0,
        output_0_d0 => grp_DCT_2D_fu_410_output_0_d0,
        output_0_address1 => grp_DCT_2D_fu_410_output_0_address1,
        output_0_ce1 => grp_DCT_2D_fu_410_output_0_ce1,
        output_0_we1 => grp_DCT_2D_fu_410_output_0_we1,
        output_0_d1 => grp_DCT_2D_fu_410_output_0_d1,
        output_1_address0 => grp_DCT_2D_fu_410_output_1_address0,
        output_1_ce0 => grp_DCT_2D_fu_410_output_1_ce0,
        output_1_we0 => grp_DCT_2D_fu_410_output_1_we0,
        output_1_d0 => grp_DCT_2D_fu_410_output_1_d0,
        output_1_address1 => grp_DCT_2D_fu_410_output_1_address1,
        output_1_ce1 => grp_DCT_2D_fu_410_output_1_ce1,
        output_1_we1 => grp_DCT_2D_fu_410_output_1_we1,
        output_1_d1 => grp_DCT_2D_fu_410_output_1_d1,
        output_2_address0 => grp_DCT_2D_fu_410_output_2_address0,
        output_2_ce0 => grp_DCT_2D_fu_410_output_2_ce0,
        output_2_we0 => grp_DCT_2D_fu_410_output_2_we0,
        output_2_d0 => grp_DCT_2D_fu_410_output_2_d0,
        output_2_address1 => grp_DCT_2D_fu_410_output_2_address1,
        output_2_ce1 => grp_DCT_2D_fu_410_output_2_ce1,
        output_2_we1 => grp_DCT_2D_fu_410_output_2_we1,
        output_2_d1 => grp_DCT_2D_fu_410_output_2_d1,
        output_3_address0 => grp_DCT_2D_fu_410_output_3_address0,
        output_3_ce0 => grp_DCT_2D_fu_410_output_3_ce0,
        output_3_we0 => grp_DCT_2D_fu_410_output_3_we0,
        output_3_d0 => grp_DCT_2D_fu_410_output_3_d0,
        output_3_address1 => grp_DCT_2D_fu_410_output_3_address1,
        output_3_ce1 => grp_DCT_2D_fu_410_output_3_ce1,
        output_3_we1 => grp_DCT_2D_fu_410_output_3_we1,
        output_3_d1 => grp_DCT_2D_fu_410_output_3_d1,
        output_4_address0 => grp_DCT_2D_fu_410_output_4_address0,
        output_4_ce0 => grp_DCT_2D_fu_410_output_4_ce0,
        output_4_we0 => grp_DCT_2D_fu_410_output_4_we0,
        output_4_d0 => grp_DCT_2D_fu_410_output_4_d0,
        output_4_address1 => grp_DCT_2D_fu_410_output_4_address1,
        output_4_ce1 => grp_DCT_2D_fu_410_output_4_ce1,
        output_4_we1 => grp_DCT_2D_fu_410_output_4_we1,
        output_4_d1 => grp_DCT_2D_fu_410_output_4_d1,
        output_5_address0 => grp_DCT_2D_fu_410_output_5_address0,
        output_5_ce0 => grp_DCT_2D_fu_410_output_5_ce0,
        output_5_we0 => grp_DCT_2D_fu_410_output_5_we0,
        output_5_d0 => grp_DCT_2D_fu_410_output_5_d0,
        output_5_address1 => grp_DCT_2D_fu_410_output_5_address1,
        output_5_ce1 => grp_DCT_2D_fu_410_output_5_ce1,
        output_5_we1 => grp_DCT_2D_fu_410_output_5_we1,
        output_5_d1 => grp_DCT_2D_fu_410_output_5_d1,
        output_6_address0 => grp_DCT_2D_fu_410_output_6_address0,
        output_6_ce0 => grp_DCT_2D_fu_410_output_6_ce0,
        output_6_we0 => grp_DCT_2D_fu_410_output_6_we0,
        output_6_d0 => grp_DCT_2D_fu_410_output_6_d0,
        output_6_address1 => grp_DCT_2D_fu_410_output_6_address1,
        output_6_ce1 => grp_DCT_2D_fu_410_output_6_ce1,
        output_6_we1 => grp_DCT_2D_fu_410_output_6_we1,
        output_6_d1 => grp_DCT_2D_fu_410_output_6_d1,
        output_7_address0 => grp_DCT_2D_fu_410_output_7_address0,
        output_7_ce0 => grp_DCT_2D_fu_410_output_7_ce0,
        output_7_we0 => grp_DCT_2D_fu_410_output_7_we0,
        output_7_d0 => grp_DCT_2D_fu_410_output_7_d0,
        output_7_address1 => grp_DCT_2D_fu_410_output_7_address1,
        output_7_ce1 => grp_DCT_2D_fu_410_output_7_ce1,
        output_7_we1 => grp_DCT_2D_fu_410_output_7_we1,
        output_7_d1 => grp_DCT_2D_fu_410_output_7_d1);

    grp_read_matrix_fu_462 : component read_matrix
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_read_matrix_fu_462_ap_start,
        ap_done => grp_read_matrix_fu_462_ap_done,
        ap_idle => grp_read_matrix_fu_462_ap_idle,
        ap_ready => grp_read_matrix_fu_462_ap_ready,
        input_0_address0 => grp_read_matrix_fu_462_input_0_address0,
        input_0_ce0 => grp_read_matrix_fu_462_input_0_ce0,
        input_0_q0 => input_0_q0,
        input_0_address1 => grp_read_matrix_fu_462_input_0_address1,
        input_0_ce1 => grp_read_matrix_fu_462_input_0_ce1,
        input_0_q1 => input_0_q1,
        input_1_address0 => grp_read_matrix_fu_462_input_1_address0,
        input_1_ce0 => grp_read_matrix_fu_462_input_1_ce0,
        input_1_q0 => input_1_q0,
        input_1_address1 => grp_read_matrix_fu_462_input_1_address1,
        input_1_ce1 => grp_read_matrix_fu_462_input_1_ce1,
        input_1_q1 => input_1_q1,
        input_2_address0 => grp_read_matrix_fu_462_input_2_address0,
        input_2_ce0 => grp_read_matrix_fu_462_input_2_ce0,
        input_2_q0 => input_2_q0,
        input_2_address1 => grp_read_matrix_fu_462_input_2_address1,
        input_2_ce1 => grp_read_matrix_fu_462_input_2_ce1,
        input_2_q1 => input_2_q1,
        input_3_address0 => grp_read_matrix_fu_462_input_3_address0,
        input_3_ce0 => grp_read_matrix_fu_462_input_3_ce0,
        input_3_q0 => input_3_q0,
        input_3_address1 => grp_read_matrix_fu_462_input_3_address1,
        input_3_ce1 => grp_read_matrix_fu_462_input_3_ce1,
        input_3_q1 => input_3_q1,
        input_4_address0 => grp_read_matrix_fu_462_input_4_address0,
        input_4_ce0 => grp_read_matrix_fu_462_input_4_ce0,
        input_4_q0 => input_4_q0,
        input_4_address1 => grp_read_matrix_fu_462_input_4_address1,
        input_4_ce1 => grp_read_matrix_fu_462_input_4_ce1,
        input_4_q1 => input_4_q1,
        input_5_address0 => grp_read_matrix_fu_462_input_5_address0,
        input_5_ce0 => grp_read_matrix_fu_462_input_5_ce0,
        input_5_q0 => input_5_q0,
        input_5_address1 => grp_read_matrix_fu_462_input_5_address1,
        input_5_ce1 => grp_read_matrix_fu_462_input_5_ce1,
        input_5_q1 => input_5_q1,
        input_6_address0 => grp_read_matrix_fu_462_input_6_address0,
        input_6_ce0 => grp_read_matrix_fu_462_input_6_ce0,
        input_6_q0 => input_6_q0,
        input_6_address1 => grp_read_matrix_fu_462_input_6_address1,
        input_6_ce1 => grp_read_matrix_fu_462_input_6_ce1,
        input_6_q1 => input_6_q1,
        input_7_address0 => grp_read_matrix_fu_462_input_7_address0,
        input_7_ce0 => grp_read_matrix_fu_462_input_7_ce0,
        input_7_q0 => input_7_q0,
        input_7_address1 => grp_read_matrix_fu_462_input_7_address1,
        input_7_ce1 => grp_read_matrix_fu_462_input_7_ce1,
        input_7_q1 => input_7_q1,
        output_0_address0 => grp_read_matrix_fu_462_output_0_address0,
        output_0_ce0 => grp_read_matrix_fu_462_output_0_ce0,
        output_0_we0 => grp_read_matrix_fu_462_output_0_we0,
        output_0_d0 => grp_read_matrix_fu_462_output_0_d0,
        output_0_address1 => grp_read_matrix_fu_462_output_0_address1,
        output_0_ce1 => grp_read_matrix_fu_462_output_0_ce1,
        output_0_we1 => grp_read_matrix_fu_462_output_0_we1,
        output_0_d1 => grp_read_matrix_fu_462_output_0_d1,
        output_1_address0 => grp_read_matrix_fu_462_output_1_address0,
        output_1_ce0 => grp_read_matrix_fu_462_output_1_ce0,
        output_1_we0 => grp_read_matrix_fu_462_output_1_we0,
        output_1_d0 => grp_read_matrix_fu_462_output_1_d0,
        output_1_address1 => grp_read_matrix_fu_462_output_1_address1,
        output_1_ce1 => grp_read_matrix_fu_462_output_1_ce1,
        output_1_we1 => grp_read_matrix_fu_462_output_1_we1,
        output_1_d1 => grp_read_matrix_fu_462_output_1_d1,
        output_2_address0 => grp_read_matrix_fu_462_output_2_address0,
        output_2_ce0 => grp_read_matrix_fu_462_output_2_ce0,
        output_2_we0 => grp_read_matrix_fu_462_output_2_we0,
        output_2_d0 => grp_read_matrix_fu_462_output_2_d0,
        output_2_address1 => grp_read_matrix_fu_462_output_2_address1,
        output_2_ce1 => grp_read_matrix_fu_462_output_2_ce1,
        output_2_we1 => grp_read_matrix_fu_462_output_2_we1,
        output_2_d1 => grp_read_matrix_fu_462_output_2_d1,
        output_3_address0 => grp_read_matrix_fu_462_output_3_address0,
        output_3_ce0 => grp_read_matrix_fu_462_output_3_ce0,
        output_3_we0 => grp_read_matrix_fu_462_output_3_we0,
        output_3_d0 => grp_read_matrix_fu_462_output_3_d0,
        output_3_address1 => grp_read_matrix_fu_462_output_3_address1,
        output_3_ce1 => grp_read_matrix_fu_462_output_3_ce1,
        output_3_we1 => grp_read_matrix_fu_462_output_3_we1,
        output_3_d1 => grp_read_matrix_fu_462_output_3_d1,
        output_4_address0 => grp_read_matrix_fu_462_output_4_address0,
        output_4_ce0 => grp_read_matrix_fu_462_output_4_ce0,
        output_4_we0 => grp_read_matrix_fu_462_output_4_we0,
        output_4_d0 => grp_read_matrix_fu_462_output_4_d0,
        output_4_address1 => grp_read_matrix_fu_462_output_4_address1,
        output_4_ce1 => grp_read_matrix_fu_462_output_4_ce1,
        output_4_we1 => grp_read_matrix_fu_462_output_4_we1,
        output_4_d1 => grp_read_matrix_fu_462_output_4_d1,
        output_5_address0 => grp_read_matrix_fu_462_output_5_address0,
        output_5_ce0 => grp_read_matrix_fu_462_output_5_ce0,
        output_5_we0 => grp_read_matrix_fu_462_output_5_we0,
        output_5_d0 => grp_read_matrix_fu_462_output_5_d0,
        output_5_address1 => grp_read_matrix_fu_462_output_5_address1,
        output_5_ce1 => grp_read_matrix_fu_462_output_5_ce1,
        output_5_we1 => grp_read_matrix_fu_462_output_5_we1,
        output_5_d1 => grp_read_matrix_fu_462_output_5_d1,
        output_6_address0 => grp_read_matrix_fu_462_output_6_address0,
        output_6_ce0 => grp_read_matrix_fu_462_output_6_ce0,
        output_6_we0 => grp_read_matrix_fu_462_output_6_we0,
        output_6_d0 => grp_read_matrix_fu_462_output_6_d0,
        output_6_address1 => grp_read_matrix_fu_462_output_6_address1,
        output_6_ce1 => grp_read_matrix_fu_462_output_6_ce1,
        output_6_we1 => grp_read_matrix_fu_462_output_6_we1,
        output_6_d1 => grp_read_matrix_fu_462_output_6_d1,
        output_7_address0 => grp_read_matrix_fu_462_output_7_address0,
        output_7_ce0 => grp_read_matrix_fu_462_output_7_ce0,
        output_7_we0 => grp_read_matrix_fu_462_output_7_we0,
        output_7_d0 => grp_read_matrix_fu_462_output_7_d0,
        output_7_address1 => grp_read_matrix_fu_462_output_7_address1,
        output_7_ce1 => grp_read_matrix_fu_462_output_7_ce1,
        output_7_we1 => grp_read_matrix_fu_462_output_7_we1,
        output_7_d1 => grp_read_matrix_fu_462_output_7_d1);

    grp_write_matrix_fu_490 : component write_matrix
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_write_matrix_fu_490_ap_start,
        ap_done => grp_write_matrix_fu_490_ap_done,
        ap_idle => grp_write_matrix_fu_490_ap_idle,
        ap_ready => grp_write_matrix_fu_490_ap_ready,
        input_0_address0 => grp_write_matrix_fu_490_input_0_address0,
        input_0_ce0 => grp_write_matrix_fu_490_input_0_ce0,
        input_0_q0 => output_buf_2d_0_q0,
        input_0_address1 => grp_write_matrix_fu_490_input_0_address1,
        input_0_ce1 => grp_write_matrix_fu_490_input_0_ce1,
        input_0_q1 => output_buf_2d_0_q1,
        input_1_address0 => grp_write_matrix_fu_490_input_1_address0,
        input_1_ce0 => grp_write_matrix_fu_490_input_1_ce0,
        input_1_q0 => output_buf_2d_1_q0,
        input_1_address1 => grp_write_matrix_fu_490_input_1_address1,
        input_1_ce1 => grp_write_matrix_fu_490_input_1_ce1,
        input_1_q1 => output_buf_2d_1_q1,
        input_2_address0 => grp_write_matrix_fu_490_input_2_address0,
        input_2_ce0 => grp_write_matrix_fu_490_input_2_ce0,
        input_2_q0 => output_buf_2d_2_q0,
        input_2_address1 => grp_write_matrix_fu_490_input_2_address1,
        input_2_ce1 => grp_write_matrix_fu_490_input_2_ce1,
        input_2_q1 => output_buf_2d_2_q1,
        input_3_address0 => grp_write_matrix_fu_490_input_3_address0,
        input_3_ce0 => grp_write_matrix_fu_490_input_3_ce0,
        input_3_q0 => output_buf_2d_3_q0,
        input_3_address1 => grp_write_matrix_fu_490_input_3_address1,
        input_3_ce1 => grp_write_matrix_fu_490_input_3_ce1,
        input_3_q1 => output_buf_2d_3_q1,
        input_4_address0 => grp_write_matrix_fu_490_input_4_address0,
        input_4_ce0 => grp_write_matrix_fu_490_input_4_ce0,
        input_4_q0 => output_buf_2d_4_q0,
        input_4_address1 => grp_write_matrix_fu_490_input_4_address1,
        input_4_ce1 => grp_write_matrix_fu_490_input_4_ce1,
        input_4_q1 => output_buf_2d_4_q1,
        input_5_address0 => grp_write_matrix_fu_490_input_5_address0,
        input_5_ce0 => grp_write_matrix_fu_490_input_5_ce0,
        input_5_q0 => output_buf_2d_5_q0,
        input_5_address1 => grp_write_matrix_fu_490_input_5_address1,
        input_5_ce1 => grp_write_matrix_fu_490_input_5_ce1,
        input_5_q1 => output_buf_2d_5_q1,
        input_6_address0 => grp_write_matrix_fu_490_input_6_address0,
        input_6_ce0 => grp_write_matrix_fu_490_input_6_ce0,
        input_6_q0 => output_buf_2d_6_q0,
        input_6_address1 => grp_write_matrix_fu_490_input_6_address1,
        input_6_ce1 => grp_write_matrix_fu_490_input_6_ce1,
        input_6_q1 => output_buf_2d_6_q1,
        input_7_address0 => grp_write_matrix_fu_490_input_7_address0,
        input_7_ce0 => grp_write_matrix_fu_490_input_7_ce0,
        input_7_q0 => output_buf_2d_7_q0,
        input_7_address1 => grp_write_matrix_fu_490_input_7_address1,
        input_7_ce1 => grp_write_matrix_fu_490_input_7_ce1,
        input_7_q1 => output_buf_2d_7_q1,
        output_0_address0 => grp_write_matrix_fu_490_output_0_address0,
        output_0_ce0 => grp_write_matrix_fu_490_output_0_ce0,
        output_0_we0 => grp_write_matrix_fu_490_output_0_we0,
        output_0_d0 => grp_write_matrix_fu_490_output_0_d0,
        output_0_address1 => grp_write_matrix_fu_490_output_0_address1,
        output_0_ce1 => grp_write_matrix_fu_490_output_0_ce1,
        output_0_we1 => grp_write_matrix_fu_490_output_0_we1,
        output_0_d1 => grp_write_matrix_fu_490_output_0_d1,
        output_1_address0 => grp_write_matrix_fu_490_output_1_address0,
        output_1_ce0 => grp_write_matrix_fu_490_output_1_ce0,
        output_1_we0 => grp_write_matrix_fu_490_output_1_we0,
        output_1_d0 => grp_write_matrix_fu_490_output_1_d0,
        output_1_address1 => grp_write_matrix_fu_490_output_1_address1,
        output_1_ce1 => grp_write_matrix_fu_490_output_1_ce1,
        output_1_we1 => grp_write_matrix_fu_490_output_1_we1,
        output_1_d1 => grp_write_matrix_fu_490_output_1_d1,
        output_2_address0 => grp_write_matrix_fu_490_output_2_address0,
        output_2_ce0 => grp_write_matrix_fu_490_output_2_ce0,
        output_2_we0 => grp_write_matrix_fu_490_output_2_we0,
        output_2_d0 => grp_write_matrix_fu_490_output_2_d0,
        output_2_address1 => grp_write_matrix_fu_490_output_2_address1,
        output_2_ce1 => grp_write_matrix_fu_490_output_2_ce1,
        output_2_we1 => grp_write_matrix_fu_490_output_2_we1,
        output_2_d1 => grp_write_matrix_fu_490_output_2_d1,
        output_3_address0 => grp_write_matrix_fu_490_output_3_address0,
        output_3_ce0 => grp_write_matrix_fu_490_output_3_ce0,
        output_3_we0 => grp_write_matrix_fu_490_output_3_we0,
        output_3_d0 => grp_write_matrix_fu_490_output_3_d0,
        output_3_address1 => grp_write_matrix_fu_490_output_3_address1,
        output_3_ce1 => grp_write_matrix_fu_490_output_3_ce1,
        output_3_we1 => grp_write_matrix_fu_490_output_3_we1,
        output_3_d1 => grp_write_matrix_fu_490_output_3_d1,
        output_4_address0 => grp_write_matrix_fu_490_output_4_address0,
        output_4_ce0 => grp_write_matrix_fu_490_output_4_ce0,
        output_4_we0 => grp_write_matrix_fu_490_output_4_we0,
        output_4_d0 => grp_write_matrix_fu_490_output_4_d0,
        output_4_address1 => grp_write_matrix_fu_490_output_4_address1,
        output_4_ce1 => grp_write_matrix_fu_490_output_4_ce1,
        output_4_we1 => grp_write_matrix_fu_490_output_4_we1,
        output_4_d1 => grp_write_matrix_fu_490_output_4_d1,
        output_5_address0 => grp_write_matrix_fu_490_output_5_address0,
        output_5_ce0 => grp_write_matrix_fu_490_output_5_ce0,
        output_5_we0 => grp_write_matrix_fu_490_output_5_we0,
        output_5_d0 => grp_write_matrix_fu_490_output_5_d0,
        output_5_address1 => grp_write_matrix_fu_490_output_5_address1,
        output_5_ce1 => grp_write_matrix_fu_490_output_5_ce1,
        output_5_we1 => grp_write_matrix_fu_490_output_5_we1,
        output_5_d1 => grp_write_matrix_fu_490_output_5_d1,
        output_6_address0 => grp_write_matrix_fu_490_output_6_address0,
        output_6_ce0 => grp_write_matrix_fu_490_output_6_ce0,
        output_6_we0 => grp_write_matrix_fu_490_output_6_we0,
        output_6_d0 => grp_write_matrix_fu_490_output_6_d0,
        output_6_address1 => grp_write_matrix_fu_490_output_6_address1,
        output_6_ce1 => grp_write_matrix_fu_490_output_6_ce1,
        output_6_we1 => grp_write_matrix_fu_490_output_6_we1,
        output_6_d1 => grp_write_matrix_fu_490_output_6_d1,
        output_7_address0 => grp_write_matrix_fu_490_output_7_address0,
        output_7_ce0 => grp_write_matrix_fu_490_output_7_ce0,
        output_7_we0 => grp_write_matrix_fu_490_output_7_we0,
        output_7_d0 => grp_write_matrix_fu_490_output_7_d0,
        output_7_address1 => grp_write_matrix_fu_490_output_7_address1,
        output_7_ce1 => grp_write_matrix_fu_490_output_7_ce1,
        output_7_we1 => grp_write_matrix_fu_490_output_7_we1,
        output_7_d1 => grp_write_matrix_fu_490_output_7_d1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_DCT_2D_fu_410_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_DCT_2D_fu_410_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state29) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                    grp_DCT_2D_fu_410_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_DCT_2D_fu_410_ap_ready = ap_const_logic_1)) then 
                    grp_DCT_2D_fu_410_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_read_matrix_fu_462_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_read_matrix_fu_462_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state24) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                    grp_read_matrix_fu_462_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_read_matrix_fu_462_ap_ready = ap_const_logic_1)) then 
                    grp_read_matrix_fu_462_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_write_matrix_fu_490_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_write_matrix_fu_490_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state81) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                    grp_write_matrix_fu_490_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_write_matrix_fu_490_ap_ready = ap_const_logic_1)) then 
                    grp_write_matrix_fu_490_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    phi_ln110_1_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln110_fu_542_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_ln110_1_reg_376 <= add_ln110_1_fu_536_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                phi_ln110_1_reg_376 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    phi_ln110_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln110_1_fu_548_p2 = ap_const_lv1_0) and (icmp_ln110_fu_542_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_ln110_reg_364 <= add_ln110_reg_590;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_ln110_reg_364 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    phi_ln111_1_reg_399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln111_fu_578_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                phi_ln111_1_reg_399 <= add_ln111_1_fu_572_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_ln111_1_reg_399 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    phi_ln111_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln110_1_fu_548_p2 = ap_const_lv1_1) and (icmp_ln110_fu_542_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_ln111_reg_387 <= ap_const_lv3_0;
            elsif (((icmp_ln111_1_fu_584_p2 = ap_const_lv1_0) and (icmp_ln111_fu_578_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                phi_ln111_reg_387 <= add_ln111_reg_646;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln110_reg_590 <= add_ln110_fu_518_p2;
                input_buf_2d_0_addr_reg_595 <= zext_ln110_fu_524_p1(3 - 1 downto 0);
                input_buf_2d_1_addr_reg_600 <= zext_ln110_fu_524_p1(3 - 1 downto 0);
                input_buf_2d_2_addr_reg_605 <= zext_ln110_fu_524_p1(3 - 1 downto 0);
                input_buf_2d_3_addr_reg_610 <= zext_ln110_fu_524_p1(3 - 1 downto 0);
                input_buf_2d_4_addr_reg_615 <= zext_ln110_fu_524_p1(3 - 1 downto 0);
                input_buf_2d_5_addr_reg_620 <= zext_ln110_fu_524_p1(3 - 1 downto 0);
                input_buf_2d_6_addr_reg_625 <= zext_ln110_fu_524_p1(3 - 1 downto 0);
                input_buf_2d_7_addr_reg_630 <= zext_ln110_fu_524_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln111_reg_646 <= add_ln111_fu_554_p2;
                output_buf_2d_0_add_reg_651 <= zext_ln111_fu_560_p1(3 - 1 downto 0);
                output_buf_2d_1_add_reg_656 <= zext_ln111_fu_560_p1(3 - 1 downto 0);
                output_buf_2d_2_add_reg_661 <= zext_ln111_fu_560_p1(3 - 1 downto 0);
                output_buf_2d_3_add_reg_666 <= zext_ln111_fu_560_p1(3 - 1 downto 0);
                output_buf_2d_4_add_reg_671 <= zext_ln111_fu_560_p1(3 - 1 downto 0);
                output_buf_2d_5_add_reg_676 <= zext_ln111_fu_560_p1(3 - 1 downto 0);
                output_buf_2d_6_add_reg_681 <= zext_ln111_fu_560_p1(3 - 1 downto 0);
                output_buf_2d_7_add_reg_686 <= zext_ln111_fu_560_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state5, icmp_ln110_fu_542_p2, icmp_ln110_1_fu_548_p2, icmp_ln111_fu_578_p2, icmp_ln111_1_fu_584_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln110_1_fu_548_p2 = ap_const_lv1_1) and (icmp_ln110_fu_542_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((icmp_ln110_1_fu_548_p2 = ap_const_lv1_0) and (icmp_ln110_fu_542_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln111_1_fu_584_p2 = ap_const_lv1_1) and (icmp_ln111_fu_578_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((icmp_ln111_1_fu_584_p2 = ap_const_lv1_0) and (icmp_ln111_fu_578_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln110_1_fu_536_p2 <= std_logic_vector(unsigned(phi_ln110_1_reg_376) + unsigned(ap_const_lv3_1));
    add_ln110_fu_518_p2 <= std_logic_vector(unsigned(phi_ln110_reg_364) + unsigned(ap_const_lv3_1));
    add_ln111_1_fu_572_p2 <= std_logic_vector(unsigned(phi_ln111_1_reg_399) + unsigned(ap_const_lv3_1));
    add_ln111_fu_554_p2 <= std_logic_vector(unsigned(phi_ln111_reg_387) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_NS_fsm_state24 <= ap_NS_fsm(23);
    ap_NS_fsm_state29 <= ap_NS_fsm(28);
    ap_NS_fsm_state81 <= ap_NS_fsm(80);

    ap_done_assign_proc : process(ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_phi_ln110_1_phi_fu_380_p4 <= phi_ln110_1_reg_376;
    ap_phi_mux_phi_ln111_1_phi_fu_403_p4 <= phi_ln111_1_reg_399;

    ap_ready_assign_proc : process(ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_DCT_2D_fu_410_ap_start <= grp_DCT_2D_fu_410_ap_start_reg;
    grp_read_matrix_fu_462_ap_start <= grp_read_matrix_fu_462_ap_start_reg;
    grp_write_matrix_fu_490_ap_start <= grp_write_matrix_fu_490_ap_start_reg;
    icmp_ln110_1_fu_548_p2 <= "1" when (phi_ln110_reg_364 = ap_const_lv3_7) else "0";
    icmp_ln110_fu_542_p2 <= "1" when (phi_ln110_1_reg_376 = ap_const_lv3_7) else "0";
    icmp_ln111_1_fu_584_p2 <= "1" when (phi_ln111_reg_387 = ap_const_lv3_7) else "0";
    icmp_ln111_fu_578_p2 <= "1" when (phi_ln111_1_reg_399 = ap_const_lv3_7) else "0";
    input_0_address0 <= grp_read_matrix_fu_462_input_0_address0;
    input_0_address1 <= grp_read_matrix_fu_462_input_0_address1;
    input_0_ce0 <= grp_read_matrix_fu_462_input_0_ce0;
    input_0_ce1 <= grp_read_matrix_fu_462_input_0_ce1;
    input_1_address0 <= grp_read_matrix_fu_462_input_1_address0;
    input_1_address1 <= grp_read_matrix_fu_462_input_1_address1;
    input_1_ce0 <= grp_read_matrix_fu_462_input_1_ce0;
    input_1_ce1 <= grp_read_matrix_fu_462_input_1_ce1;
    input_2_address0 <= grp_read_matrix_fu_462_input_2_address0;
    input_2_address1 <= grp_read_matrix_fu_462_input_2_address1;
    input_2_ce0 <= grp_read_matrix_fu_462_input_2_ce0;
    input_2_ce1 <= grp_read_matrix_fu_462_input_2_ce1;
    input_3_address0 <= grp_read_matrix_fu_462_input_3_address0;
    input_3_address1 <= grp_read_matrix_fu_462_input_3_address1;
    input_3_ce0 <= grp_read_matrix_fu_462_input_3_ce0;
    input_3_ce1 <= grp_read_matrix_fu_462_input_3_ce1;
    input_4_address0 <= grp_read_matrix_fu_462_input_4_address0;
    input_4_address1 <= grp_read_matrix_fu_462_input_4_address1;
    input_4_ce0 <= grp_read_matrix_fu_462_input_4_ce0;
    input_4_ce1 <= grp_read_matrix_fu_462_input_4_ce1;
    input_5_address0 <= grp_read_matrix_fu_462_input_5_address0;
    input_5_address1 <= grp_read_matrix_fu_462_input_5_address1;
    input_5_ce0 <= grp_read_matrix_fu_462_input_5_ce0;
    input_5_ce1 <= grp_read_matrix_fu_462_input_5_ce1;
    input_6_address0 <= grp_read_matrix_fu_462_input_6_address0;
    input_6_address1 <= grp_read_matrix_fu_462_input_6_address1;
    input_6_ce0 <= grp_read_matrix_fu_462_input_6_ce0;
    input_6_ce1 <= grp_read_matrix_fu_462_input_6_ce1;
    input_7_address0 <= grp_read_matrix_fu_462_input_7_address0;
    input_7_address1 <= grp_read_matrix_fu_462_input_7_address1;
    input_7_ce0 <= grp_read_matrix_fu_462_input_7_ce0;
    input_7_ce1 <= grp_read_matrix_fu_462_input_7_ce1;

    input_buf_2d_0_address0_assign_proc : process(input_buf_2d_0_addr_reg_595, ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_0_address0, grp_read_matrix_fu_462_output_0_address0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_0_address0 <= input_buf_2d_0_addr_reg_595;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_0_address0 <= grp_read_matrix_fu_462_output_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_0_address0 <= grp_DCT_2D_fu_410_input_0_address0;
        else 
            input_buf_2d_0_address0 <= "XXX";
        end if; 
    end process;


    input_buf_2d_0_ce0_assign_proc : process(ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_0_ce0, grp_read_matrix_fu_462_output_0_ce0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_0_ce0 <= grp_read_matrix_fu_462_output_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_0_ce0 <= grp_DCT_2D_fu_410_input_0_ce0;
        else 
            input_buf_2d_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_0_ce1_assign_proc : process(grp_read_matrix_fu_462_output_0_ce1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_0_ce1 <= grp_read_matrix_fu_462_output_0_ce1;
        else 
            input_buf_2d_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_0_d0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_0_d0, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_0_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_0_d0 <= grp_read_matrix_fu_462_output_0_d0;
        else 
            input_buf_2d_0_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buf_2d_0_we0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_0_we0, ap_phi_mux_phi_ln110_1_phi_fu_380_p4, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_phi_mux_phi_ln110_1_phi_fu_380_p4 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buf_2d_0_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_0_we0 <= grp_read_matrix_fu_462_output_0_we0;
        else 
            input_buf_2d_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_0_we1_assign_proc : process(grp_read_matrix_fu_462_output_0_we1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_0_we1 <= grp_read_matrix_fu_462_output_0_we1;
        else 
            input_buf_2d_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_1_address0_assign_proc : process(input_buf_2d_1_addr_reg_600, ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_1_address0, grp_read_matrix_fu_462_output_1_address0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_1_address0 <= input_buf_2d_1_addr_reg_600;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_1_address0 <= grp_read_matrix_fu_462_output_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_1_address0 <= grp_DCT_2D_fu_410_input_1_address0;
        else 
            input_buf_2d_1_address0 <= "XXX";
        end if; 
    end process;


    input_buf_2d_1_ce0_assign_proc : process(ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_1_ce0, grp_read_matrix_fu_462_output_1_ce0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_1_ce0 <= grp_read_matrix_fu_462_output_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_1_ce0 <= grp_DCT_2D_fu_410_input_1_ce0;
        else 
            input_buf_2d_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_1_ce1_assign_proc : process(grp_read_matrix_fu_462_output_1_ce1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_1_ce1 <= grp_read_matrix_fu_462_output_1_ce1;
        else 
            input_buf_2d_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_1_d0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_1_d0, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_1_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_1_d0 <= grp_read_matrix_fu_462_output_1_d0;
        else 
            input_buf_2d_1_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buf_2d_1_we0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_1_we0, ap_phi_mux_phi_ln110_1_phi_fu_380_p4, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_phi_mux_phi_ln110_1_phi_fu_380_p4 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buf_2d_1_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_1_we0 <= grp_read_matrix_fu_462_output_1_we0;
        else 
            input_buf_2d_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_1_we1_assign_proc : process(grp_read_matrix_fu_462_output_1_we1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_1_we1 <= grp_read_matrix_fu_462_output_1_we1;
        else 
            input_buf_2d_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_2_address0_assign_proc : process(input_buf_2d_2_addr_reg_605, ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_2_address0, grp_read_matrix_fu_462_output_2_address0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_2_address0 <= input_buf_2d_2_addr_reg_605;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_2_address0 <= grp_read_matrix_fu_462_output_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_2_address0 <= grp_DCT_2D_fu_410_input_2_address0;
        else 
            input_buf_2d_2_address0 <= "XXX";
        end if; 
    end process;


    input_buf_2d_2_ce0_assign_proc : process(ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_2_ce0, grp_read_matrix_fu_462_output_2_ce0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_2_ce0 <= grp_read_matrix_fu_462_output_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_2_ce0 <= grp_DCT_2D_fu_410_input_2_ce0;
        else 
            input_buf_2d_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_2_ce1_assign_proc : process(grp_read_matrix_fu_462_output_2_ce1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_2_ce1 <= grp_read_matrix_fu_462_output_2_ce1;
        else 
            input_buf_2d_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_2_d0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_2_d0, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_2_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_2_d0 <= grp_read_matrix_fu_462_output_2_d0;
        else 
            input_buf_2d_2_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buf_2d_2_we0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_2_we0, ap_phi_mux_phi_ln110_1_phi_fu_380_p4, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_phi_mux_phi_ln110_1_phi_fu_380_p4 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buf_2d_2_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_2_we0 <= grp_read_matrix_fu_462_output_2_we0;
        else 
            input_buf_2d_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_2_we1_assign_proc : process(grp_read_matrix_fu_462_output_2_we1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_2_we1 <= grp_read_matrix_fu_462_output_2_we1;
        else 
            input_buf_2d_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_3_address0_assign_proc : process(input_buf_2d_3_addr_reg_610, ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_3_address0, grp_read_matrix_fu_462_output_3_address0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_3_address0 <= input_buf_2d_3_addr_reg_610;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_3_address0 <= grp_read_matrix_fu_462_output_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_3_address0 <= grp_DCT_2D_fu_410_input_3_address0;
        else 
            input_buf_2d_3_address0 <= "XXX";
        end if; 
    end process;


    input_buf_2d_3_ce0_assign_proc : process(ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_3_ce0, grp_read_matrix_fu_462_output_3_ce0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_3_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_3_ce0 <= grp_read_matrix_fu_462_output_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_3_ce0 <= grp_DCT_2D_fu_410_input_3_ce0;
        else 
            input_buf_2d_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_3_ce1_assign_proc : process(grp_read_matrix_fu_462_output_3_ce1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_3_ce1 <= grp_read_matrix_fu_462_output_3_ce1;
        else 
            input_buf_2d_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_3_d0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_3_d0, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_3_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_3_d0 <= grp_read_matrix_fu_462_output_3_d0;
        else 
            input_buf_2d_3_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buf_2d_3_we0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_3_we0, ap_phi_mux_phi_ln110_1_phi_fu_380_p4, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_phi_mux_phi_ln110_1_phi_fu_380_p4 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buf_2d_3_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_3_we0 <= grp_read_matrix_fu_462_output_3_we0;
        else 
            input_buf_2d_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_3_we1_assign_proc : process(grp_read_matrix_fu_462_output_3_we1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_3_we1 <= grp_read_matrix_fu_462_output_3_we1;
        else 
            input_buf_2d_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_4_address0_assign_proc : process(input_buf_2d_4_addr_reg_615, ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_4_address0, grp_read_matrix_fu_462_output_4_address0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_4_address0 <= input_buf_2d_4_addr_reg_615;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_4_address0 <= grp_read_matrix_fu_462_output_4_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_4_address0 <= grp_DCT_2D_fu_410_input_4_address0;
        else 
            input_buf_2d_4_address0 <= "XXX";
        end if; 
    end process;


    input_buf_2d_4_ce0_assign_proc : process(ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_4_ce0, grp_read_matrix_fu_462_output_4_ce0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_4_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_4_ce0 <= grp_read_matrix_fu_462_output_4_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_4_ce0 <= grp_DCT_2D_fu_410_input_4_ce0;
        else 
            input_buf_2d_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_4_ce1_assign_proc : process(grp_read_matrix_fu_462_output_4_ce1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_4_ce1 <= grp_read_matrix_fu_462_output_4_ce1;
        else 
            input_buf_2d_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_4_d0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_4_d0, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_4_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_4_d0 <= grp_read_matrix_fu_462_output_4_d0;
        else 
            input_buf_2d_4_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buf_2d_4_we0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_4_we0, ap_phi_mux_phi_ln110_1_phi_fu_380_p4, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_phi_mux_phi_ln110_1_phi_fu_380_p4 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buf_2d_4_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_4_we0 <= grp_read_matrix_fu_462_output_4_we0;
        else 
            input_buf_2d_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_4_we1_assign_proc : process(grp_read_matrix_fu_462_output_4_we1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_4_we1 <= grp_read_matrix_fu_462_output_4_we1;
        else 
            input_buf_2d_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_5_address0_assign_proc : process(input_buf_2d_5_addr_reg_620, ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_5_address0, grp_read_matrix_fu_462_output_5_address0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_5_address0 <= input_buf_2d_5_addr_reg_620;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_5_address0 <= grp_read_matrix_fu_462_output_5_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_5_address0 <= grp_DCT_2D_fu_410_input_5_address0;
        else 
            input_buf_2d_5_address0 <= "XXX";
        end if; 
    end process;


    input_buf_2d_5_ce0_assign_proc : process(ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_5_ce0, grp_read_matrix_fu_462_output_5_ce0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_5_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_5_ce0 <= grp_read_matrix_fu_462_output_5_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_5_ce0 <= grp_DCT_2D_fu_410_input_5_ce0;
        else 
            input_buf_2d_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_5_ce1_assign_proc : process(grp_read_matrix_fu_462_output_5_ce1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_5_ce1 <= grp_read_matrix_fu_462_output_5_ce1;
        else 
            input_buf_2d_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_5_d0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_5_d0, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_5_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_5_d0 <= grp_read_matrix_fu_462_output_5_d0;
        else 
            input_buf_2d_5_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buf_2d_5_we0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_5_we0, ap_phi_mux_phi_ln110_1_phi_fu_380_p4, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_phi_mux_phi_ln110_1_phi_fu_380_p4 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buf_2d_5_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_5_we0 <= grp_read_matrix_fu_462_output_5_we0;
        else 
            input_buf_2d_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_5_we1_assign_proc : process(grp_read_matrix_fu_462_output_5_we1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_5_we1 <= grp_read_matrix_fu_462_output_5_we1;
        else 
            input_buf_2d_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_6_address0_assign_proc : process(input_buf_2d_6_addr_reg_625, ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_6_address0, grp_read_matrix_fu_462_output_6_address0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_6_address0 <= input_buf_2d_6_addr_reg_625;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_6_address0 <= grp_read_matrix_fu_462_output_6_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_6_address0 <= grp_DCT_2D_fu_410_input_6_address0;
        else 
            input_buf_2d_6_address0 <= "XXX";
        end if; 
    end process;


    input_buf_2d_6_ce0_assign_proc : process(ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_6_ce0, grp_read_matrix_fu_462_output_6_ce0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_6_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_6_ce0 <= grp_read_matrix_fu_462_output_6_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_6_ce0 <= grp_DCT_2D_fu_410_input_6_ce0;
        else 
            input_buf_2d_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_6_ce1_assign_proc : process(grp_read_matrix_fu_462_output_6_ce1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_6_ce1 <= grp_read_matrix_fu_462_output_6_ce1;
        else 
            input_buf_2d_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_6_d0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_6_d0, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_6_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_6_d0 <= grp_read_matrix_fu_462_output_6_d0;
        else 
            input_buf_2d_6_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buf_2d_6_we0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_6_we0, ap_phi_mux_phi_ln110_1_phi_fu_380_p4, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_phi_mux_phi_ln110_1_phi_fu_380_p4 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buf_2d_6_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_6_we0 <= grp_read_matrix_fu_462_output_6_we0;
        else 
            input_buf_2d_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_6_we1_assign_proc : process(grp_read_matrix_fu_462_output_6_we1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_6_we1 <= grp_read_matrix_fu_462_output_6_we1;
        else 
            input_buf_2d_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_7_address0_assign_proc : process(input_buf_2d_7_addr_reg_630, ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_7_address0, grp_read_matrix_fu_462_output_7_address0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_7_address0 <= input_buf_2d_7_addr_reg_630;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_7_address0 <= grp_read_matrix_fu_462_output_7_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_7_address0 <= grp_DCT_2D_fu_410_input_7_address0;
        else 
            input_buf_2d_7_address0 <= "XXX";
        end if; 
    end process;


    input_buf_2d_7_ce0_assign_proc : process(ap_CS_fsm_state3, grp_DCT_2D_fu_410_input_7_ce0, grp_read_matrix_fu_462_output_7_ce0, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_7_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_7_ce0 <= grp_read_matrix_fu_462_output_7_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            input_buf_2d_7_ce0 <= grp_DCT_2D_fu_410_input_7_ce0;
        else 
            input_buf_2d_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_7_ce1_assign_proc : process(grp_read_matrix_fu_462_output_7_ce1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_7_ce1 <= grp_read_matrix_fu_462_output_7_ce1;
        else 
            input_buf_2d_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_7_d0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_7_d0, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_buf_2d_7_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_7_d0 <= grp_read_matrix_fu_462_output_7_d0;
        else 
            input_buf_2d_7_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_buf_2d_7_we0_assign_proc : process(ap_CS_fsm_state3, grp_read_matrix_fu_462_output_7_we0, ap_phi_mux_phi_ln110_1_phi_fu_380_p4, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_phi_mux_phi_ln110_1_phi_fu_380_p4 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_buf_2d_7_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_7_we0 <= grp_read_matrix_fu_462_output_7_we0;
        else 
            input_buf_2d_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2d_7_we1_assign_proc : process(grp_read_matrix_fu_462_output_7_we1, ap_CS_fsm_state28, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            input_buf_2d_7_we1 <= grp_read_matrix_fu_462_output_7_we1;
        else 
            input_buf_2d_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    output_0_address0 <= grp_write_matrix_fu_490_output_0_address0;
    output_0_address1 <= grp_write_matrix_fu_490_output_0_address1;
    output_0_ce0 <= grp_write_matrix_fu_490_output_0_ce0;
    output_0_ce1 <= grp_write_matrix_fu_490_output_0_ce1;
    output_0_d0 <= grp_write_matrix_fu_490_output_0_d0;
    output_0_d1 <= grp_write_matrix_fu_490_output_0_d1;
    output_0_we0 <= grp_write_matrix_fu_490_output_0_we0;
    output_0_we1 <= grp_write_matrix_fu_490_output_0_we1;
    output_1_address0 <= grp_write_matrix_fu_490_output_1_address0;
    output_1_address1 <= grp_write_matrix_fu_490_output_1_address1;
    output_1_ce0 <= grp_write_matrix_fu_490_output_1_ce0;
    output_1_ce1 <= grp_write_matrix_fu_490_output_1_ce1;
    output_1_d0 <= grp_write_matrix_fu_490_output_1_d0;
    output_1_d1 <= grp_write_matrix_fu_490_output_1_d1;
    output_1_we0 <= grp_write_matrix_fu_490_output_1_we0;
    output_1_we1 <= grp_write_matrix_fu_490_output_1_we1;
    output_2_address0 <= grp_write_matrix_fu_490_output_2_address0;
    output_2_address1 <= grp_write_matrix_fu_490_output_2_address1;
    output_2_ce0 <= grp_write_matrix_fu_490_output_2_ce0;
    output_2_ce1 <= grp_write_matrix_fu_490_output_2_ce1;
    output_2_d0 <= grp_write_matrix_fu_490_output_2_d0;
    output_2_d1 <= grp_write_matrix_fu_490_output_2_d1;
    output_2_we0 <= grp_write_matrix_fu_490_output_2_we0;
    output_2_we1 <= grp_write_matrix_fu_490_output_2_we1;
    output_3_address0 <= grp_write_matrix_fu_490_output_3_address0;
    output_3_address1 <= grp_write_matrix_fu_490_output_3_address1;
    output_3_ce0 <= grp_write_matrix_fu_490_output_3_ce0;
    output_3_ce1 <= grp_write_matrix_fu_490_output_3_ce1;
    output_3_d0 <= grp_write_matrix_fu_490_output_3_d0;
    output_3_d1 <= grp_write_matrix_fu_490_output_3_d1;
    output_3_we0 <= grp_write_matrix_fu_490_output_3_we0;
    output_3_we1 <= grp_write_matrix_fu_490_output_3_we1;
    output_4_address0 <= grp_write_matrix_fu_490_output_4_address0;
    output_4_address1 <= grp_write_matrix_fu_490_output_4_address1;
    output_4_ce0 <= grp_write_matrix_fu_490_output_4_ce0;
    output_4_ce1 <= grp_write_matrix_fu_490_output_4_ce1;
    output_4_d0 <= grp_write_matrix_fu_490_output_4_d0;
    output_4_d1 <= grp_write_matrix_fu_490_output_4_d1;
    output_4_we0 <= grp_write_matrix_fu_490_output_4_we0;
    output_4_we1 <= grp_write_matrix_fu_490_output_4_we1;
    output_5_address0 <= grp_write_matrix_fu_490_output_5_address0;
    output_5_address1 <= grp_write_matrix_fu_490_output_5_address1;
    output_5_ce0 <= grp_write_matrix_fu_490_output_5_ce0;
    output_5_ce1 <= grp_write_matrix_fu_490_output_5_ce1;
    output_5_d0 <= grp_write_matrix_fu_490_output_5_d0;
    output_5_d1 <= grp_write_matrix_fu_490_output_5_d1;
    output_5_we0 <= grp_write_matrix_fu_490_output_5_we0;
    output_5_we1 <= grp_write_matrix_fu_490_output_5_we1;
    output_6_address0 <= grp_write_matrix_fu_490_output_6_address0;
    output_6_address1 <= grp_write_matrix_fu_490_output_6_address1;
    output_6_ce0 <= grp_write_matrix_fu_490_output_6_ce0;
    output_6_ce1 <= grp_write_matrix_fu_490_output_6_ce1;
    output_6_d0 <= grp_write_matrix_fu_490_output_6_d0;
    output_6_d1 <= grp_write_matrix_fu_490_output_6_d1;
    output_6_we0 <= grp_write_matrix_fu_490_output_6_we0;
    output_6_we1 <= grp_write_matrix_fu_490_output_6_we1;
    output_7_address0 <= grp_write_matrix_fu_490_output_7_address0;
    output_7_address1 <= grp_write_matrix_fu_490_output_7_address1;
    output_7_ce0 <= grp_write_matrix_fu_490_output_7_ce0;
    output_7_ce1 <= grp_write_matrix_fu_490_output_7_ce1;
    output_7_d0 <= grp_write_matrix_fu_490_output_7_d0;
    output_7_d1 <= grp_write_matrix_fu_490_output_7_d1;
    output_7_we0 <= grp_write_matrix_fu_490_output_7_we0;
    output_7_we1 <= grp_write_matrix_fu_490_output_7_we1;

    output_buf_2d_0_address0_assign_proc : process(output_buf_2d_0_add_reg_651, ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_0_address0, grp_write_matrix_fu_490_input_0_address0, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_0_address0 <= output_buf_2d_0_add_reg_651;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_0_address0 <= grp_write_matrix_fu_490_input_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_0_address0 <= grp_DCT_2D_fu_410_output_0_address0;
        else 
            output_buf_2d_0_address0 <= "XXX";
        end if; 
    end process;


    output_buf_2d_0_address1_assign_proc : process(grp_DCT_2D_fu_410_output_0_address1, grp_write_matrix_fu_490_input_0_address1, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_0_address1 <= grp_write_matrix_fu_490_input_0_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_0_address1 <= grp_DCT_2D_fu_410_output_0_address1;
        else 
            output_buf_2d_0_address1 <= "XXX";
        end if; 
    end process;


    output_buf_2d_0_ce0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_0_ce0, grp_write_matrix_fu_490_input_0_ce0, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_0_ce0 <= grp_write_matrix_fu_490_input_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_0_ce0 <= grp_DCT_2D_fu_410_output_0_ce0;
        else 
            output_buf_2d_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_0_ce1_assign_proc : process(grp_DCT_2D_fu_410_output_0_ce1, grp_write_matrix_fu_490_input_0_ce1, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_0_ce1 <= grp_write_matrix_fu_490_input_0_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_0_ce1 <= grp_DCT_2D_fu_410_output_0_ce1;
        else 
            output_buf_2d_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_0_d0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_0_d0, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_0_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_0_d0 <= grp_DCT_2D_fu_410_output_0_d0;
        else 
            output_buf_2d_0_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_buf_2d_0_we0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_0_we0, ap_phi_mux_phi_ln111_1_phi_fu_403_p4, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if (((ap_phi_mux_phi_ln111_1_phi_fu_403_p4 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            output_buf_2d_0_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_0_we0 <= grp_DCT_2D_fu_410_output_0_we0;
        else 
            output_buf_2d_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_0_we1_assign_proc : process(grp_DCT_2D_fu_410_output_0_we1, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_0_we1 <= grp_DCT_2D_fu_410_output_0_we1;
        else 
            output_buf_2d_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_1_address0_assign_proc : process(output_buf_2d_1_add_reg_656, ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_1_address0, grp_write_matrix_fu_490_input_1_address0, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_1_address0 <= output_buf_2d_1_add_reg_656;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_1_address0 <= grp_write_matrix_fu_490_input_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_1_address0 <= grp_DCT_2D_fu_410_output_1_address0;
        else 
            output_buf_2d_1_address0 <= "XXX";
        end if; 
    end process;


    output_buf_2d_1_address1_assign_proc : process(grp_DCT_2D_fu_410_output_1_address1, grp_write_matrix_fu_490_input_1_address1, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_1_address1 <= grp_write_matrix_fu_490_input_1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_1_address1 <= grp_DCT_2D_fu_410_output_1_address1;
        else 
            output_buf_2d_1_address1 <= "XXX";
        end if; 
    end process;


    output_buf_2d_1_ce0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_1_ce0, grp_write_matrix_fu_490_input_1_ce0, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_1_ce0 <= grp_write_matrix_fu_490_input_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_1_ce0 <= grp_DCT_2D_fu_410_output_1_ce0;
        else 
            output_buf_2d_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_1_ce1_assign_proc : process(grp_DCT_2D_fu_410_output_1_ce1, grp_write_matrix_fu_490_input_1_ce1, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_1_ce1 <= grp_write_matrix_fu_490_input_1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_1_ce1 <= grp_DCT_2D_fu_410_output_1_ce1;
        else 
            output_buf_2d_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_1_d0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_1_d0, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_1_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_1_d0 <= grp_DCT_2D_fu_410_output_1_d0;
        else 
            output_buf_2d_1_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_buf_2d_1_we0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_1_we0, ap_phi_mux_phi_ln111_1_phi_fu_403_p4, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if (((ap_phi_mux_phi_ln111_1_phi_fu_403_p4 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            output_buf_2d_1_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_1_we0 <= grp_DCT_2D_fu_410_output_1_we0;
        else 
            output_buf_2d_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_1_we1_assign_proc : process(grp_DCT_2D_fu_410_output_1_we1, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74))) then 
            output_buf_2d_1_we1 <= grp_DCT_2D_fu_410_output_1_we1;
        else 
            output_buf_2d_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_2_address0_assign_proc : process(output_buf_2d_2_add_reg_661, ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_2_address0, grp_write_matrix_fu_490_input_2_address0, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_2_address0 <= output_buf_2d_2_add_reg_661;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_2_address0 <= grp_write_matrix_fu_490_input_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_2_address0 <= grp_DCT_2D_fu_410_output_2_address0;
        else 
            output_buf_2d_2_address0 <= "XXX";
        end if; 
    end process;


    output_buf_2d_2_address1_assign_proc : process(grp_DCT_2D_fu_410_output_2_address1, grp_write_matrix_fu_490_input_2_address1, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_2_address1 <= grp_write_matrix_fu_490_input_2_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_2_address1 <= grp_DCT_2D_fu_410_output_2_address1;
        else 
            output_buf_2d_2_address1 <= "XXX";
        end if; 
    end process;


    output_buf_2d_2_ce0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_2_ce0, grp_write_matrix_fu_490_input_2_ce0, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_2_ce0 <= grp_write_matrix_fu_490_input_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_2_ce0 <= grp_DCT_2D_fu_410_output_2_ce0;
        else 
            output_buf_2d_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_2_ce1_assign_proc : process(grp_DCT_2D_fu_410_output_2_ce1, grp_write_matrix_fu_490_input_2_ce1, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_2_ce1 <= grp_write_matrix_fu_490_input_2_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_2_ce1 <= grp_DCT_2D_fu_410_output_2_ce1;
        else 
            output_buf_2d_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_2_d0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_2_d0, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_2_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_2_d0 <= grp_DCT_2D_fu_410_output_2_d0;
        else 
            output_buf_2d_2_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_buf_2d_2_we0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_2_we0, ap_phi_mux_phi_ln111_1_phi_fu_403_p4, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78)
    begin
        if (((ap_phi_mux_phi_ln111_1_phi_fu_403_p4 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            output_buf_2d_2_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_2_we0 <= grp_DCT_2D_fu_410_output_2_we0;
        else 
            output_buf_2d_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_2_we1_assign_proc : process(grp_DCT_2D_fu_410_output_2_we1, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_2_we1 <= grp_DCT_2D_fu_410_output_2_we1;
        else 
            output_buf_2d_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_3_address0_assign_proc : process(output_buf_2d_3_add_reg_666, ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_3_address0, grp_write_matrix_fu_490_input_3_address0, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_3_address0 <= output_buf_2d_3_add_reg_666;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_3_address0 <= grp_write_matrix_fu_490_input_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_3_address0 <= grp_DCT_2D_fu_410_output_3_address0;
        else 
            output_buf_2d_3_address0 <= "XXX";
        end if; 
    end process;


    output_buf_2d_3_address1_assign_proc : process(grp_DCT_2D_fu_410_output_3_address1, grp_write_matrix_fu_490_input_3_address1, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_3_address1 <= grp_write_matrix_fu_490_input_3_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_3_address1 <= grp_DCT_2D_fu_410_output_3_address1;
        else 
            output_buf_2d_3_address1 <= "XXX";
        end if; 
    end process;


    output_buf_2d_3_ce0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_3_ce0, grp_write_matrix_fu_490_input_3_ce0, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_3_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_3_ce0 <= grp_write_matrix_fu_490_input_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_3_ce0 <= grp_DCT_2D_fu_410_output_3_ce0;
        else 
            output_buf_2d_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_3_ce1_assign_proc : process(grp_DCT_2D_fu_410_output_3_ce1, grp_write_matrix_fu_490_input_3_ce1, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_3_ce1 <= grp_write_matrix_fu_490_input_3_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_3_ce1 <= grp_DCT_2D_fu_410_output_3_ce1;
        else 
            output_buf_2d_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_3_d0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_3_d0, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_3_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_3_d0 <= grp_DCT_2D_fu_410_output_3_d0;
        else 
            output_buf_2d_3_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_buf_2d_3_we0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_3_we0, ap_phi_mux_phi_ln111_1_phi_fu_403_p4, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78)
    begin
        if (((ap_phi_mux_phi_ln111_1_phi_fu_403_p4 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            output_buf_2d_3_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_3_we0 <= grp_DCT_2D_fu_410_output_3_we0;
        else 
            output_buf_2d_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_3_we1_assign_proc : process(grp_DCT_2D_fu_410_output_3_we1, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            output_buf_2d_3_we1 <= grp_DCT_2D_fu_410_output_3_we1;
        else 
            output_buf_2d_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_4_address0_assign_proc : process(output_buf_2d_4_add_reg_671, ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_4_address0, grp_write_matrix_fu_490_input_4_address0, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_4_address0 <= output_buf_2d_4_add_reg_671;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_4_address0 <= grp_write_matrix_fu_490_input_4_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_4_address0 <= grp_DCT_2D_fu_410_output_4_address0;
        else 
            output_buf_2d_4_address0 <= "XXX";
        end if; 
    end process;


    output_buf_2d_4_address1_assign_proc : process(grp_DCT_2D_fu_410_output_4_address1, grp_write_matrix_fu_490_input_4_address1, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_4_address1 <= grp_write_matrix_fu_490_input_4_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_4_address1 <= grp_DCT_2D_fu_410_output_4_address1;
        else 
            output_buf_2d_4_address1 <= "XXX";
        end if; 
    end process;


    output_buf_2d_4_ce0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_4_ce0, grp_write_matrix_fu_490_input_4_ce0, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_4_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_4_ce0 <= grp_write_matrix_fu_490_input_4_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_4_ce0 <= grp_DCT_2D_fu_410_output_4_ce0;
        else 
            output_buf_2d_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_4_ce1_assign_proc : process(grp_DCT_2D_fu_410_output_4_ce1, grp_write_matrix_fu_490_input_4_ce1, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_4_ce1 <= grp_write_matrix_fu_490_input_4_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_4_ce1 <= grp_DCT_2D_fu_410_output_4_ce1;
        else 
            output_buf_2d_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_4_d0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_4_d0, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_4_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_4_d0 <= grp_DCT_2D_fu_410_output_4_d0;
        else 
            output_buf_2d_4_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_buf_2d_4_we0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_4_we0, ap_phi_mux_phi_ln111_1_phi_fu_403_p4, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79)
    begin
        if (((ap_phi_mux_phi_ln111_1_phi_fu_403_p4 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            output_buf_2d_4_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_4_we0 <= grp_DCT_2D_fu_410_output_4_we0;
        else 
            output_buf_2d_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_4_we1_assign_proc : process(grp_DCT_2D_fu_410_output_4_we1, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_4_we1 <= grp_DCT_2D_fu_410_output_4_we1;
        else 
            output_buf_2d_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_5_address0_assign_proc : process(output_buf_2d_5_add_reg_676, ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_5_address0, grp_write_matrix_fu_490_input_5_address0, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_5_address0 <= output_buf_2d_5_add_reg_676;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_5_address0 <= grp_write_matrix_fu_490_input_5_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_5_address0 <= grp_DCT_2D_fu_410_output_5_address0;
        else 
            output_buf_2d_5_address0 <= "XXX";
        end if; 
    end process;


    output_buf_2d_5_address1_assign_proc : process(grp_DCT_2D_fu_410_output_5_address1, grp_write_matrix_fu_490_input_5_address1, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_5_address1 <= grp_write_matrix_fu_490_input_5_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_5_address1 <= grp_DCT_2D_fu_410_output_5_address1;
        else 
            output_buf_2d_5_address1 <= "XXX";
        end if; 
    end process;


    output_buf_2d_5_ce0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_5_ce0, grp_write_matrix_fu_490_input_5_ce0, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_5_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_5_ce0 <= grp_write_matrix_fu_490_input_5_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_5_ce0 <= grp_DCT_2D_fu_410_output_5_ce0;
        else 
            output_buf_2d_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_5_ce1_assign_proc : process(grp_DCT_2D_fu_410_output_5_ce1, grp_write_matrix_fu_490_input_5_ce1, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_5_ce1 <= grp_write_matrix_fu_490_input_5_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_5_ce1 <= grp_DCT_2D_fu_410_output_5_ce1;
        else 
            output_buf_2d_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_5_d0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_5_d0, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_5_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_5_d0 <= grp_DCT_2D_fu_410_output_5_d0;
        else 
            output_buf_2d_5_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_buf_2d_5_we0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_5_we0, ap_phi_mux_phi_ln111_1_phi_fu_403_p4, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79)
    begin
        if (((ap_phi_mux_phi_ln111_1_phi_fu_403_p4 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            output_buf_2d_5_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_5_we0 <= grp_DCT_2D_fu_410_output_5_we0;
        else 
            output_buf_2d_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_5_we1_assign_proc : process(grp_DCT_2D_fu_410_output_5_we1, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            output_buf_2d_5_we1 <= grp_DCT_2D_fu_410_output_5_we1;
        else 
            output_buf_2d_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_6_address0_assign_proc : process(output_buf_2d_6_add_reg_681, ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_6_address0, grp_write_matrix_fu_490_input_6_address0, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_6_address0 <= output_buf_2d_6_add_reg_681;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_6_address0 <= grp_write_matrix_fu_490_input_6_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_6_address0 <= grp_DCT_2D_fu_410_output_6_address0;
        else 
            output_buf_2d_6_address0 <= "XXX";
        end if; 
    end process;


    output_buf_2d_6_address1_assign_proc : process(grp_DCT_2D_fu_410_output_6_address1, grp_write_matrix_fu_490_input_6_address1, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_6_address1 <= grp_write_matrix_fu_490_input_6_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_6_address1 <= grp_DCT_2D_fu_410_output_6_address1;
        else 
            output_buf_2d_6_address1 <= "XXX";
        end if; 
    end process;


    output_buf_2d_6_ce0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_6_ce0, grp_write_matrix_fu_490_input_6_ce0, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_6_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_6_ce0 <= grp_write_matrix_fu_490_input_6_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_6_ce0 <= grp_DCT_2D_fu_410_output_6_ce0;
        else 
            output_buf_2d_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_6_ce1_assign_proc : process(grp_DCT_2D_fu_410_output_6_ce1, grp_write_matrix_fu_490_input_6_ce1, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_6_ce1 <= grp_write_matrix_fu_490_input_6_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_6_ce1 <= grp_DCT_2D_fu_410_output_6_ce1;
        else 
            output_buf_2d_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_6_d0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_6_d0, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_6_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_6_d0 <= grp_DCT_2D_fu_410_output_6_d0;
        else 
            output_buf_2d_6_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_buf_2d_6_we0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_6_we0, ap_phi_mux_phi_ln111_1_phi_fu_403_p4, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80)
    begin
        if (((ap_phi_mux_phi_ln111_1_phi_fu_403_p4 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            output_buf_2d_6_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_6_we0 <= grp_DCT_2D_fu_410_output_6_we0;
        else 
            output_buf_2d_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_6_we1_assign_proc : process(grp_DCT_2D_fu_410_output_6_we1, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_6_we1 <= grp_DCT_2D_fu_410_output_6_we1;
        else 
            output_buf_2d_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_7_address0_assign_proc : process(output_buf_2d_7_add_reg_686, ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_7_address0, grp_write_matrix_fu_490_input_7_address0, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_7_address0 <= output_buf_2d_7_add_reg_686;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_7_address0 <= grp_write_matrix_fu_490_input_7_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_7_address0 <= grp_DCT_2D_fu_410_output_7_address0;
        else 
            output_buf_2d_7_address0 <= "XXX";
        end if; 
    end process;


    output_buf_2d_7_address1_assign_proc : process(grp_DCT_2D_fu_410_output_7_address1, grp_write_matrix_fu_490_input_7_address1, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_7_address1 <= grp_write_matrix_fu_490_input_7_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_7_address1 <= grp_DCT_2D_fu_410_output_7_address1;
        else 
            output_buf_2d_7_address1 <= "XXX";
        end if; 
    end process;


    output_buf_2d_7_ce0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_7_ce0, grp_write_matrix_fu_490_input_7_ce0, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_7_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_7_ce0 <= grp_write_matrix_fu_490_input_7_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_7_ce0 <= grp_DCT_2D_fu_410_output_7_ce0;
        else 
            output_buf_2d_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_7_ce1_assign_proc : process(grp_DCT_2D_fu_410_output_7_ce1, grp_write_matrix_fu_490_input_7_ce1, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            output_buf_2d_7_ce1 <= grp_write_matrix_fu_490_input_7_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_7_ce1 <= grp_DCT_2D_fu_410_output_7_ce1;
        else 
            output_buf_2d_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_7_d0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_7_d0, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_buf_2d_7_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_7_d0 <= grp_DCT_2D_fu_410_output_7_d0;
        else 
            output_buf_2d_7_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_buf_2d_7_we0_assign_proc : process(ap_CS_fsm_state5, grp_DCT_2D_fu_410_output_7_we0, ap_phi_mux_phi_ln111_1_phi_fu_403_p4, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80)
    begin
        if (((ap_phi_mux_phi_ln111_1_phi_fu_403_p4 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            output_buf_2d_7_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_7_we0 <= grp_DCT_2D_fu_410_output_7_we0;
        else 
            output_buf_2d_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_2d_7_we1_assign_proc : process(grp_DCT_2D_fu_410_output_7_we1, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            output_buf_2d_7_we1 <= grp_DCT_2D_fu_410_output_7_we1;
        else 
            output_buf_2d_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln110_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln110_reg_364),64));
    zext_ln111_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln111_reg_387),64));
end behav;
